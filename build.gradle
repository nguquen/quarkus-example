plugins {
    id 'java'
    id 'io.quarkus'
    id 'io.gatling.gradle' version '3.9.3.1'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-arc'

    // rest
    implementation 'io.quarkus:quarkus-resteasy-reactive'
    implementation 'io.quarkus:quarkus-resteasy-reactive-jackson'
    implementation 'io.quarkus:quarkus-smallrye-openapi'

    // grpc
    implementation 'io.quarkus:quarkus-grpc'

    // db
    annotationProcessor("io.quarkus:quarkus-panache-common")
    implementation("io.quarkus:quarkus-hibernate-reactive-panache")
    implementation("io.quarkus:quarkus-reactive-pg-client")
    implementation("io.quarkus:quarkus-hibernate-validator")
    implementation("io.quarkus:quarkus-jdbc-postgresql")
    implementation("io.quarkus:quarkus-flyway")

    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    compileOnly group: 'org.projectlombok', name: 'lombok', version: "$lombokVersion"
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: "$lombokVersion"

    // https://mvnrepository.com/artifact/org.mapstruct/mapstruct
    implementation group: 'org.mapstruct', name: 'mapstruct', version: "$mapstructVersion"
    annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: "$mapstructVersion"
    annotationProcessor group: 'no.entur.mapstruct.spi', name: 'protobuf-spi-impl', version: "$mapstructProtobufSpiVersion"

    // test
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'io.quarkus:quarkus-junit5-mockito'

    // gatling
    gatling group: 'com.github.phisgr', name: 'gatling-grpc', version: "$gatlingGrpcVersion"
    gatling group: 'com.github.phisgr', name: 'gatling-grpc-kt', version: "$gatlingGrpcKtVersion"
    gatling group: 'com.google.protobuf', name: 'protobuf-java', version: "$gatlingProtobufVersion"
}

group 'com.leapxpert'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}
